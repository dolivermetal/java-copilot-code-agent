name: üóëÔ∏è Remover Atividade
description: Solicitar a remo√ß√£o de uma atividade extracurricular do sistema
title: "[Remover Atividade]: "
labels: ["enhancement", "atividade", "remo√ß√£o", "copilot"]
assignees:
  - copilot
body:
  - type: markdown
    attributes:
      value: |
        ## üóëÔ∏è Formul√°rio de Remo√ß√£o de Atividade
        
        Use este formul√°rio para solicitar a remo√ß√£o permanente de uma atividade.
        **Esta a√ß√£o √© irrevers√≠vel.**
        
        **O Copilot ser√° automaticamente designado para implementar esta solicita√ß√£o.**

  - type: input
    id: activity-name
    attributes:
      label: Nome da Atividade *
      description: Nome exato da atividade a ser removida
      placeholder: "Ex: Old Activity Name"
    validations:
      required: true

  - type: textarea
    id: justification
    attributes:
      label: Justificativa *
      description: Por que esta atividade precisa ser removida?
      placeholder: "Ex: A atividade foi descontinuada devido √† falta de interesse dos estudantes."
    validations:
      required: true

  - type: dropdown
    id: has-participants
    attributes:
      label: A atividade tem participantes inscritos? *
      description: Verificar antes de remover
      options:
        - N√£o - nenhum estudante inscrito
        - Sim - mas j√° foram notificados e realocados
        - N√£o sei
    validations:
      required: true

  - type: textarea
    id: participant-plan
    attributes:
      label: Plano para Participantes
      description: Se houver estudantes inscritos, como eles ser√£o tratados?
      placeholder: "Ex: Todos os estudantes foram notificados e realocados para atividades similares."

  - type: checkboxes
    id: confirmations
    attributes:
      label: Confirma√ß√µes *
      description: Confirme os seguintes pontos antes de prosseguir
      options:
        - label: Entendo que esta a√ß√£o √© irrevers√≠vel
          required: true
        - label: Todos os estudantes afetados foram notificados
          required: true
        - label: Tenho autoriza√ß√£o para remover esta atividade
          required: true
        - label: Verifiquei que n√£o h√° conflitos ou depend√™ncias
          required: true

  - type: textarea
    id: additional-context
    attributes:
      label: Informa√ß√µes Adicionais
      description: Qualquer outra informa√ß√£o relevante

  - type: markdown
    attributes:
      value: |
        ---
        
        ## ü§ñ Crit√©rios de Aceita√ß√£o para o Copilot
        
        A implementa√ß√£o deve:
        1. Localizar a atividade existente pelo nome exato
        2. Verificar se h√° participantes inscritos
        3. Se houver participantes, documentar na migra√ß√£o ou solicitar confirma√ß√£o
        4. Remover a atividade do banco de dados
        5. Criar uma migra√ß√£o Mongock com m√©todo de rollback
        6. Verificar que a atividade n√£o aparece mais na interface web
        7. Garantir que a remo√ß√£o n√£o quebra funcionalidades existentes
        
        ## üí° Dicas de Implementa√ß√£o
        
        - Criar nova migra√ß√£o: `V00X_RemoveActivity_[NomeAtividade].java`
        - Localizar atividade: `mongoTemplate.findOne(Query.query(Criteria.where("name").is(activityName)), Activity.class)`
        - Verificar participantes:
          ```java
          if (activity != null && !activity.getParticipants().isEmpty()) {
              // Log ou lan√ßar exce√ß√£o
              System.out.println("WARNING: Removing activity with " + 
                  activity.getParticipants().size() + " participants");
          }
          ```
        - Remover: `mongoTemplate.remove(activity)`
        - Implementar rollback para restaurar a atividade se necess√°rio
        
        ## üîç Contexto T√©cnico
        
        - **Opera√ß√£o**: `mongoTemplate.remove(Query.query(Criteria.where("name").is(activityName)), Activity.class)`
        - **Rollback**: Salvar dados da atividade antes de remover para poder restaurar
        - **Collection**: "activities"
        
        ## üìã Checklist de Implementa√ß√£o
        
        ```java
        @Execution
        public void execute() {
            Query query = new Query(Criteria.where("name").is("ActivityName"));
            Activity activity = mongoTemplate.findOne(query, Activity.class);
            
            if (activity != null) {
                // Log para auditoria
                System.out.println("Removing activity: " + activity.getName());
                System.out.println("Current participants: " + activity.getParticipants().size());
                
                // Remover
                mongoTemplate.remove(activity);
            }
        }
        
        @RollbackExecution
        public void rollback() {
            // Restaurar atividade se necess√°rio
            // Usar dados salvos para recriar
        }
        ```
        
        ## ‚ö†Ô∏è Valida√ß√µes e Cuidados
        
        - **Backup**: Salvar dados da atividade antes de remover (para rollback)
        - **Participantes**: Registrar no log quantos participantes ser√£o afetados
        - **Auditoria**: Adicionar log detalhado da remo√ß√£o
        - **Rollback**: Implementar m√©todo de rollback funcional
        - **Testes**: Verificar que outras funcionalidades continuam funcionando
        
        ## üéØ Verifica√ß√µes P√≥s-Remo√ß√£o
        
        - [ ] Atividade n√£o aparece na listagem da interface web
        - [ ] Endpoint GET /activities n√£o retorna a atividade
        - [ ] Filtros continuam funcionando
        - [ ] Nenhuma refer√™ncia √≥rf√£ no sistema
        - [ ] Log de auditoria registra a remo√ß√£o
